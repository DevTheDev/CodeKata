#Grocery Store Pricer#Stock in terms of "name":[units, price, wholesale cost]stock = {	"can":[50, 9.45, 0.5],	"chip":[100, 6.75, 0.2],	"soda":[46, 5.00, 0.46],	"water":[30, 2.25, 0.1],	"spice":[400, 0.5, 0.05],	"milk":[49, 2.5, 0.56],	"ice cream":[54, 0.01, 0.01],	"vegetable":[23, 4.5, 0.35],}# Deals in terms of "Name":[x for y dollars (y/x), $x per pound (8x), x get y free price*(x)/(x+y)]deals = {	"milk":[2, 10, 0, 0, 0, 0],	"vegetable":[0, 0, 5, 9, 0, 0],	"chip":[0, 0, 0, 0,  5, 3],}#Gives current stock, line by linedef listStock():	for i in stock:		print "There are " + str(stock[i][0]) + " units of " + str(i) + " remaining."		print "This " + str(i) + " cost us $" + str(stock[i][0]*stock[i][2]) + "."		print "We sell this " + str(i) + " for a revenue of $" + str(stock[i][1]*stock[i][0]) + "."		print "Pre tax, this" + str(i) + " will net us $" + str(stock[i][0]*stock[i][1] - stock[i][0]*stock[i][2]) + "."#Gives data on current stock, as a specified item i		def listCustomStock(i):	print "There are " + str(stock[i][0]) + " units of " + str(i) + " remaining."	print "This " + str(i) + " costs us $" + str(stock[i][0]*stock[i][2]) + "."	print "We sell this " + str(i) + " for a revenue of $" + str(stock[i][1]*stock[i][0]) + "."	print "Pre tax, this " + str(i) + " will net us $" + str(stock[i][0]*stock[i][1] - stock[i][0]*stock[i][2]) + "."	#Gives a full check on current stockdef fullCheck():	for i in stock:		if i in deals:			listCustomDeals(i)		else:			listCustomStock(i)#Gives data taking deals into account for an item idef fullCustomCheck(i):	if i in deals:		listCustomDeals(i)	else:		listCustomStock(i)				#Custom deal functionsdef xforydollar(x,y):	return y/x #price per unitdef xperpound(x):	return x/8 #price per oz.def buyxgetyfree(x,y):	return x/(x+y) #price per unit#Finds type of custom dealdef findDeal(i):	if deals[i][0] != 0:		return 0	elif deals[i][2] != 0:		return 1	elif deals[i][4] != 0:		return 2#Gives processed data on a custom dealdef listCustomDeals(i):	print "There are " + str(stock[i][0]) + " units of " + str(i) + " remaining."	type = findDeal(i)	if type == 0:		p = xforydollar(deals[i][0], deals[i][1])		print "This " + str(i) + " costs us $" + str(stock[i][2]*stock[i][0]) + "."		print "We sell this " + str(i) + " for a revenue of $" + str(p*float(stock[i][0])) + "."		print "Pre tax, this " + str(i) + " will net us $" + str(stock[i][0]*p*stock[i][2] - stock[i][0]*stock[i][2]) + "."	elif type == 1:		p = xperpound(deals[i][2])		print "This " + str(i) + " costs us $" + str(stock[i][2]*stock[i][0]) + "."		print "We sell this " + str(i) + " for a revenue of $" + str(p*stock[i][0]*deals[i][3]) + " per oz."		print "Pre tax, this " + str(i) + " will net us $" + str(stock[i][0]*p*stock[i][2]*deals[i][3] - stock[i][0]*stock[i][2]) + "."	elif type == 2:		p = buyxgetyfree(deals[i][3], deals[i][4])		print "This " + str(i) + " costs us $" + str(stock[i][2]*stock[i][0]) + "."		print "We sell this " + str(i) + " for a revenue of $" + str(p*stock[i][0]) + "."		print "Pre tax, this " + str(i) + " will net us $" + str(stock[i][0]*p - stock[i][0]*stock[i][2]) + "."	else:		print "How did you do this? You must be pretty 1337."#end of functionslistCustomStock("vegetable")fullCustomCheck("vegetable")